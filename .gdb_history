clear 81
info b
c
n
n
n
n

n
n
n
n
run aa
clear all
info b
clear 1
clear 2
clear 4
c
clear 65
clear 72
clear 73
r
c
backtrace
exit
run aa
run USERA
run asdasd
run "asdiouahsdiuh "
exit
run
backtrace
bt full
exit
run "export ao="
backtrace full
b ft_env_exist 
run "export ao="
display var
n
display key
n
run "export aa="
n
s
display substr
n
p plus
n
display env_str[i]
n
exit
b ft_export
n
run "export ao=lol"
n
n
display *cmdargs
n
n
n
s
n
n
n
b 40
c
display shell-GLIBC_2.2.5 GLIBC_2.3 GLIBC_2.34 GLIBC_2.35 GLIBC_2.4 GLIBC_PRIVATE _DYNAMIC _GLOBAL_OFFSET_TABLE_ _IO_stdin_used __FRAME_END__ __GI___nptl_change_stack_perm __GI__dl_debug_state __GI__dl_exception_create __GI__dl_exception_create_format __GI__dl_exception_free __GI__dl_find_object __GNU_EH_FRAME_HDR __TMC_END__ __abi_tag __bss_start __data_start __do_global_dtors_aux __do_global_dtors_aux_fini_array_entry __dso_handle __ehdr_start __frame_dummy_init_array_entry __nptl_change_stack_perm _begin _dl_build_local_scope _dl_call_libc_early_init _dl_close _dl_close_worker _dl_close_worker.part.0.isra.0 _dl_debug_initialize _dl_debug_state _dl_debug_update _dl_dst_count _dl_dst_substitute _dl_error_free _dl_exception_create _dl_exception_create_format _dl_exception_free _dl_find_object _dl_find_object_dlclose _dl_find_object_freeres _dl_find_object_from_map _dl_find_object_init _dl_find_object_update _dl_fini _dl_init _dl_init_paths _dl_make_stacks_executable _dl_map_object_deps _dl_relocate_static_pie _dlfo_process_initial _dlfo_sort_mappings _edata _end _fini _init _start add_history add_history@got[plt] add_history@plt add_name_to_object[isra] add_path.constprop.0.isra[cold] add_path.constprop[isra] call_destructors call_init[part] chdir chdir@got[plt] chdir@plt completed data_start decompose_rpath deregister_tm_clones exit exit@got[plt] exit@plt expand_dynamic_string_token fillin_rpath[isra] fork fork@got[plt] fork@plt frame_dummy free free@got[plt] free@plt ft_append_env ft_cd ft_change_home ft_check_n ft_check_pipes ft_check_redirs ft_check_special_char ft_check_status ft_check_this_redir_text ft_copy_env ft_count_words ft_countpointer ft_echo ft_env ft_env_exist ft_expand ft_export ft_export_duplicate ft_export_no_args ft_export_size_increase ft_formatprint ft_free ft_get_env_key ft_get_env_key_and_value ft_get_env_value ft_get_next_word ft_getpid ft_handle_sig ft_have_unclosed_qtes ft_is_empty_token ft_is_pipe_repeated ft_is_redir_or_pipe_before ft_is_space ft_itoa ft_join_env ft_numlen ft_print_syntax_error ft_printf ft_printpointer_fd ft_putchar_fd ft_puthex_fd ft_puthex_fd[count] ft_putnbr_fd ft_putpointer_fd ft_putstr_fd ft_pwd ft_readline ft_remove_env ft_safe_chdir ft_split ft_start_sig ft_strchr ft_strcmp ft_strdup ft_strdupword ft_strjoin ft_strjoin_free ft_strlen ft_strncmp ft_substr ft_swap_env ft_this_pipe_have_error ft_this_redir_have_error ft_unset ft_update_directory ft_uputnbr_fd ft_what_have_after_redir getcwd getcwd@got[plt] getcwd@plt is_dst is_trusted_path_normalize length_mismatch main malloc malloc@got[plt] malloc@plt open_path open_verify[constprop] openaux printf printf@got[plt] printf@plt readline readline@got[plt] readline@plt register_tm_clones remove_slotinfo rl_on_new_line rl_on_new_line@got[plt] rl_on_new_line@plt rl_redisplay rl_redisplay@got[plt] rl_redisplay@plt rl_replace_line rl_replace_line@got[plt] rl_replace_line@plt sigaction sigaction@got[plt] sigaction@plt sigaddset sigaddset@got[plt] sigaddset@plt sigemptyset sigemptyset@got[pl
display shell->envp @size
undisplay 2
display *shell->envp @ size
n

n
p size
b if i == 50
c
n
display swap
n
exit
so .gdbinit
run_x
so .gdbinit
run_x
n
n
n
n
n
n
n
exit
so .gdbinit
run_x
p *cmdargs @2
n
n
n
p plus_mode
n
exit
b ft_export
run "ZSH=lol"
n
n
n
exit
run "export ZSH=lol"
b ft_export
run "export ZSH=lol"
n
s
p *j
n
p key
n
display name
n
n
b if strcmp(name, "ZSH")
clea 74
b if strcmp(name, "ZSH") == 0
c
n
n
n
n
p j
p *j
n
n
p len
p var
exit
b ft_export
run "export ZSH=lol"
n
exit
b ft_export
run "export ZSH=lol"
n
s
b 81
c
n
n
p *j
n
n
p j
p plus_mode
n
n
n
exit
n
n
run "export ZSH=lol"
n
n
b 90
c
n
n
n
s
p j
n
display k
display cmdargs
n
display temp[k]
n
n
n
n
n
n
b ft_export
run "export ZSH=lol"
n
n
s
display *temp @67
n
n
n
n
n
display k
n
run "export ZSH=lol"
n
s
n
display j
n
p temp[k]
exit
ft_export
b ft_export
run "export ZSH"
n
n
s
n
b 58
c
n
b 70
c
n
n
p size
b if i == 67
c
traceback full
backtrace full
b ft_export
run "export ZSH"
n
display *cmdargs
n
s
display *cmdargs
n
n
n
n
b 54
c
n
n
n
exit
b ft_export_size_increase 
run "export ZSH"
exit
b ft_export_size_increase 
run "export ZSH"
n
b 55
c
display *cmdargs
n
exit
b ft_export_size_increase 
run "export ZSH
run "export ZSH"
n
b 55
c
display cmdargs[k]
n
